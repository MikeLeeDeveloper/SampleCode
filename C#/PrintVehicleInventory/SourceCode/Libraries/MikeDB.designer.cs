#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintVehicleInventory.Libraries
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MikeDB")]
	public partial class MikeDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVehicleSubCategory(VehicleSubCategory instance);
    partial void UpdateVehicleSubCategory(VehicleSubCategory instance);
    partial void DeleteVehicleSubCategory(VehicleSubCategory instance);
    partial void InsertVehicleAttribute(VehicleAttribute instance);
    partial void UpdateVehicleAttribute(VehicleAttribute instance);
    partial void DeleteVehicleAttribute(VehicleAttribute instance);
    partial void InsertVehicleCategory(VehicleCategory instance);
    partial void UpdateVehicleCategory(VehicleCategory instance);
    partial void DeleteVehicleCategory(VehicleCategory instance);
    partial void InsertVehicleEntity(VehicleEntity instance);
    partial void UpdateVehicleEntity(VehicleEntity instance);
    partial void DeleteVehicleEntity(VehicleEntity instance);
    partial void InsertVehicleInventory(VehicleInventory instance);
    partial void UpdateVehicleInventory(VehicleInventory instance);
    partial void DeleteVehicleInventory(VehicleInventory instance);
    partial void InsertVehicleInventoryUser(VehicleInventoryUser instance);
    partial void UpdateVehicleInventoryUser(VehicleInventoryUser instance);
    partial void DeleteVehicleInventoryUser(VehicleInventoryUser instance);
    partial void InsertVehicleManufacturer(VehicleManufacturer instance);
    partial void UpdateVehicleManufacturer(VehicleManufacturer instance);
    partial void DeleteVehicleManufacturer(VehicleManufacturer instance);
    partial void InsertVehicleModel(VehicleModel instance);
    partial void UpdateVehicleModel(VehicleModel instance);
    partial void DeleteVehicleModel(VehicleModel instance);
    partial void InsertVehicleValue(VehicleValue instance);
    partial void UpdateVehicleValue(VehicleValue instance);
    partial void DeleteVehicleValue(VehicleValue instance);
    #endregion
		
		public MikeDBDataContext() : 
				base(global::PrintVehicleInventory.Properties.Settings.Default.MikeDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MikeDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikeDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikeDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikeDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<VehicleSubCategory> VehicleSubCategories
		{
			get
			{
				return this.GetTable<VehicleSubCategory>();
			}
		}
		
		public System.Data.Linq.Table<VehicleAttribute> VehicleAttributes
		{
			get
			{
				return this.GetTable<VehicleAttribute>();
			}
		}
		
		public System.Data.Linq.Table<VehicleCategory> VehicleCategories
		{
			get
			{
				return this.GetTable<VehicleCategory>();
			}
		}
		
		public System.Data.Linq.Table<VehicleEntity> VehicleEntities
		{
			get
			{
				return this.GetTable<VehicleEntity>();
			}
		}
		
		public System.Data.Linq.Table<VehicleInventory> VehicleInventories
		{
			get
			{
				return this.GetTable<VehicleInventory>();
			}
		}
		
		public System.Data.Linq.Table<VehicleInventoryUser> VehicleInventoryUsers
		{
			get
			{
				return this.GetTable<VehicleInventoryUser>();
			}
		}
		
		public System.Data.Linq.Table<VehicleManufacturer> VehicleManufacturers
		{
			get
			{
				return this.GetTable<VehicleManufacturer>();
			}
		}
		
		public System.Data.Linq.Table<VehicleModel> VehicleModels
		{
			get
			{
				return this.GetTable<VehicleModel>();
			}
		}
		
		public System.Data.Linq.Table<VehicleValue> VehicleValues
		{
			get
			{
				return this.GetTable<VehicleValue>();
			}
		}
		
		public System.Data.Linq.Table<OwnedVehicle> OwnedVehicles
		{
			get
			{
				return this.GetTable<OwnedVehicle>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVehicleDetailByUserID")]
		public ISingleResult<GetVehicleDetailByUserIDResult> GetVehicleDetailByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<GetVehicleDetailByUserIDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Email;
		
		private string _LastName;
		
		private string _FirstName;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedDTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDTSChanging(System.DateTime value);
    partial void OnCreatedDTSChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDTS", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDTS
		{
			get
			{
				return this._CreatedDTS;
			}
			set
			{
				if ((this._CreatedDTS != value))
				{
					this.OnCreatedDTSChanging(value);
					this.SendPropertyChanging();
					this._CreatedDTS = value;
					this.SendPropertyChanged("CreatedDTS");
					this.OnCreatedDTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleSubCategory")]
	public partial class VehicleSubCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<VehicleModel> _VehicleModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public VehicleSubCategory()
		{
			this._VehicleModels = new EntitySet<VehicleModel>(new Action<VehicleModel>(this.attach_VehicleModels), new Action<VehicleModel>(this.detach_VehicleModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleSubCategory_VehicleModel", Storage="_VehicleModels", ThisKey="ID", OtherKey="VehicleSubCategoryID")]
		public EntitySet<VehicleModel> VehicleModels
		{
			get
			{
				return this._VehicleModels;
			}
			set
			{
				this._VehicleModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehicleModels(VehicleModel entity)
		{
			this.SendPropertyChanging();
			entity.VehicleSubCategory = this;
		}
		
		private void detach_VehicleModels(VehicleModel entity)
		{
			this.SendPropertyChanging();
			entity.VehicleSubCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleAttribute")]
	public partial class VehicleAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _VehicleEntityID;
		
		private string _Name;
		
		private int _SortOrder;
		
		private string _Description;
		
		private EntityRef<VehicleEntity> _VehicleEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVehicleEntityIDChanging(int value);
    partial void OnVehicleEntityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VehicleAttribute()
		{
			this._VehicleEntity = default(EntityRef<VehicleEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleEntityID", DbType="Int NOT NULL")]
		public int VehicleEntityID
		{
			get
			{
				return this._VehicleEntityID;
			}
			set
			{
				if ((this._VehicleEntityID != value))
				{
					if (this._VehicleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleEntityIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleEntityID = value;
					this.SendPropertyChanged("VehicleEntityID");
					this.OnVehicleEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleEntity_VehicleAttribute", Storage="_VehicleEntity", ThisKey="VehicleEntityID", OtherKey="ID", IsForeignKey=true)]
		public VehicleEntity VehicleEntity
		{
			get
			{
				return this._VehicleEntity.Entity;
			}
			set
			{
				VehicleEntity previousValue = this._VehicleEntity.Entity;
				if (((previousValue != value) 
							|| (this._VehicleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleEntity.Entity = null;
						previousValue.VehicleAttributes.Remove(this);
					}
					this._VehicleEntity.Entity = value;
					if ((value != null))
					{
						value.VehicleAttributes.Add(this);
						this._VehicleEntityID = value.ID;
					}
					else
					{
						this._VehicleEntityID = default(int);
					}
					this.SendPropertyChanged("VehicleEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleCategory")]
	public partial class VehicleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public VehicleCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleEntity")]
	public partial class VehicleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<VehicleAttribute> _VehicleAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VehicleEntity()
		{
			this._VehicleAttributes = new EntitySet<VehicleAttribute>(new Action<VehicleAttribute>(this.attach_VehicleAttributes), new Action<VehicleAttribute>(this.detach_VehicleAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleEntity_VehicleAttribute", Storage="_VehicleAttributes", ThisKey="ID", OtherKey="VehicleEntityID")]
		public EntitySet<VehicleAttribute> VehicleAttributes
		{
			get
			{
				return this._VehicleAttributes;
			}
			set
			{
				this._VehicleAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehicleAttributes(VehicleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.VehicleEntity = this;
		}
		
		private void detach_VehicleAttributes(VehicleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.VehicleEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleInventory")]
	public partial class VehicleInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VIN;
		
		private int _VehicleModelID;
		
		private System.Nullable<System.DateTime> _CreatedDTS;
		
		private EntityRef<VehicleModel> _VehicleModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVINChanging(string value);
    partial void OnVINChanged();
    partial void OnVehicleModelIDChanging(int value);
    partial void OnVehicleModelIDChanged();
    partial void OnCreatedDTSChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDTSChanged();
    #endregion
		
		public VehicleInventory()
		{
			this._VehicleModel = default(EntityRef<VehicleModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="NVarChar(17) NOT NULL", CanBeNull=false)]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this.OnVINChanging(value);
					this.SendPropertyChanging();
					this._VIN = value;
					this.SendPropertyChanged("VIN");
					this.OnVINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleModelID", DbType="Int NOT NULL")]
		public int VehicleModelID
		{
			get
			{
				return this._VehicleModelID;
			}
			set
			{
				if ((this._VehicleModelID != value))
				{
					if (this._VehicleModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleModelIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleModelID = value;
					this.SendPropertyChanged("VehicleModelID");
					this.OnVehicleModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDTS", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDTS
		{
			get
			{
				return this._CreatedDTS;
			}
			set
			{
				if ((this._CreatedDTS != value))
				{
					this.OnCreatedDTSChanging(value);
					this.SendPropertyChanging();
					this._CreatedDTS = value;
					this.SendPropertyChanged("CreatedDTS");
					this.OnCreatedDTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleModel_VehicleInventory", Storage="_VehicleModel", ThisKey="VehicleModelID", OtherKey="ID", IsForeignKey=true)]
		public VehicleModel VehicleModel
		{
			get
			{
				return this._VehicleModel.Entity;
			}
			set
			{
				VehicleModel previousValue = this._VehicleModel.Entity;
				if (((previousValue != value) 
							|| (this._VehicleModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleModel.Entity = null;
						previousValue.VehicleInventories.Remove(this);
					}
					this._VehicleModel.Entity = value;
					if ((value != null))
					{
						value.VehicleInventories.Add(this);
						this._VehicleModelID = value.ID;
					}
					else
					{
						this._VehicleModelID = default(int);
					}
					this.SendPropertyChanged("VehicleModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleInventoryUser")]
	public partial class VehicleInventoryUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _VehicleInventoryID;
		
		private bool _IsOwner;
		
		private System.DateTime _CreatedDTS;
		
		private System.Nullable<System.DateTime> _ModifiedDTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnVehicleInventoryIDChanging(int value);
    partial void OnVehicleInventoryIDChanged();
    partial void OnIsOwnerChanging(bool value);
    partial void OnIsOwnerChanged();
    partial void OnCreatedDTSChanging(System.DateTime value);
    partial void OnCreatedDTSChanged();
    partial void OnModifiedDTSChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDTSChanged();
    #endregion
		
		public VehicleInventoryUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleInventoryID", DbType="Int NOT NULL")]
		public int VehicleInventoryID
		{
			get
			{
				return this._VehicleInventoryID;
			}
			set
			{
				if ((this._VehicleInventoryID != value))
				{
					this.OnVehicleInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleInventoryID = value;
					this.SendPropertyChanged("VehicleInventoryID");
					this.OnVehicleInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOwner", DbType="Bit NOT NULL")]
		public bool IsOwner
		{
			get
			{
				return this._IsOwner;
			}
			set
			{
				if ((this._IsOwner != value))
				{
					this.OnIsOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsOwner = value;
					this.SendPropertyChanged("IsOwner");
					this.OnIsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDTS", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDTS
		{
			get
			{
				return this._CreatedDTS;
			}
			set
			{
				if ((this._CreatedDTS != value))
				{
					this.OnCreatedDTSChanging(value);
					this.SendPropertyChanging();
					this._CreatedDTS = value;
					this.SendPropertyChanged("CreatedDTS");
					this.OnCreatedDTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDTS", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDTS
		{
			get
			{
				return this._ModifiedDTS;
			}
			set
			{
				if ((this._ModifiedDTS != value))
				{
					this.OnModifiedDTSChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDTS = value;
					this.SendPropertyChanged("ModifiedDTS");
					this.OnModifiedDTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleManufacturer")]
	public partial class VehicleManufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CountryOfOrigin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryOfOriginChanging(string value);
    partial void OnCountryOfOriginChanged();
    #endregion
		
		public VehicleManufacturer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryOfOrigin", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CountryOfOrigin
		{
			get
			{
				return this._CountryOfOrigin;
			}
			set
			{
				if ((this._CountryOfOrigin != value))
				{
					this.OnCountryOfOriginChanging(value);
					this.SendPropertyChanging();
					this._CountryOfOrigin = value;
					this.SendPropertyChanged("CountryOfOrigin");
					this.OnCountryOfOriginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleModel")]
	public partial class VehicleModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _VehicleManufacturerID;
		
		private int _VehicleCategoryID;
		
		private int _VehicleSubCategoryID;
		
		private EntitySet<VehicleInventory> _VehicleInventories;
		
		private EntityRef<VehicleSubCategory> _VehicleSubCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVehicleManufacturerIDChanging(int value);
    partial void OnVehicleManufacturerIDChanged();
    partial void OnVehicleCategoryIDChanging(int value);
    partial void OnVehicleCategoryIDChanged();
    partial void OnVehicleSubCategoryIDChanging(int value);
    partial void OnVehicleSubCategoryIDChanged();
    #endregion
		
		public VehicleModel()
		{
			this._VehicleInventories = new EntitySet<VehicleInventory>(new Action<VehicleInventory>(this.attach_VehicleInventories), new Action<VehicleInventory>(this.detach_VehicleInventories));
			this._VehicleSubCategory = default(EntityRef<VehicleSubCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleManufacturerID", DbType="Int NOT NULL")]
		public int VehicleManufacturerID
		{
			get
			{
				return this._VehicleManufacturerID;
			}
			set
			{
				if ((this._VehicleManufacturerID != value))
				{
					this.OnVehicleManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleManufacturerID = value;
					this.SendPropertyChanged("VehicleManufacturerID");
					this.OnVehicleManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleCategoryID", DbType="Int NOT NULL")]
		public int VehicleCategoryID
		{
			get
			{
				return this._VehicleCategoryID;
			}
			set
			{
				if ((this._VehicleCategoryID != value))
				{
					this.OnVehicleCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleCategoryID = value;
					this.SendPropertyChanged("VehicleCategoryID");
					this.OnVehicleCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleSubCategoryID", DbType="Int NOT NULL")]
		public int VehicleSubCategoryID
		{
			get
			{
				return this._VehicleSubCategoryID;
			}
			set
			{
				if ((this._VehicleSubCategoryID != value))
				{
					if (this._VehicleSubCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleSubCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleSubCategoryID = value;
					this.SendPropertyChanged("VehicleSubCategoryID");
					this.OnVehicleSubCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleModel_VehicleInventory", Storage="_VehicleInventories", ThisKey="ID", OtherKey="VehicleModelID")]
		public EntitySet<VehicleInventory> VehicleInventories
		{
			get
			{
				return this._VehicleInventories;
			}
			set
			{
				this._VehicleInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleSubCategory_VehicleModel", Storage="_VehicleSubCategory", ThisKey="VehicleSubCategoryID", OtherKey="ID", IsForeignKey=true)]
		public VehicleSubCategory VehicleSubCategory
		{
			get
			{
				return this._VehicleSubCategory.Entity;
			}
			set
			{
				VehicleSubCategory previousValue = this._VehicleSubCategory.Entity;
				if (((previousValue != value) 
							|| (this._VehicleSubCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleSubCategory.Entity = null;
						previousValue.VehicleModels.Remove(this);
					}
					this._VehicleSubCategory.Entity = value;
					if ((value != null))
					{
						value.VehicleModels.Add(this);
						this._VehicleSubCategoryID = value.ID;
					}
					else
					{
						this._VehicleSubCategoryID = default(int);
					}
					this.SendPropertyChanged("VehicleSubCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehicleInventories(VehicleInventory entity)
		{
			this.SendPropertyChanging();
			entity.VehicleModel = this;
		}
		
		private void detach_VehicleInventories(VehicleInventory entity)
		{
			this.SendPropertyChanging();
			entity.VehicleModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleValue")]
	public partial class VehicleValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _VehicleEntityID;
		
		private int _VehicleAttributeID;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnVehicleEntityIDChanging(int value);
    partial void OnVehicleEntityIDChanged();
    partial void OnVehicleAttributeIDChanging(int value);
    partial void OnVehicleAttributeIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public VehicleValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VehicleEntityID
		{
			get
			{
				return this._VehicleEntityID;
			}
			set
			{
				if ((this._VehicleEntityID != value))
				{
					this.OnVehicleEntityIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleEntityID = value;
					this.SendPropertyChanged("VehicleEntityID");
					this.OnVehicleEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleAttributeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VehicleAttributeID
		{
			get
			{
				return this._VehicleAttributeID;
			}
			set
			{
				if ((this._VehicleAttributeID != value))
				{
					this.OnVehicleAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleAttributeID = value;
					this.SendPropertyChanged("VehicleAttributeID");
					this.OnVehicleAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OwnedVehicles")]
	public partial class OwnedVehicle
	{
		
		private int _InventoryNumber;
		
		private string _Category;
		
		private string _SubCategory;
		
		private string _Make;
		
		private string _Model;
		
		private string _Year;
		
		private string _Color;
		
		private string _Trim;
		
		private string _Mileage;
		
		private string _Title;
		
		public OwnedVehicle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryNumber", DbType="Int NOT NULL")]
		public int InventoryNumber
		{
			get
			{
				return this._InventoryNumber;
			}
			set
			{
				if ((this._InventoryNumber != value))
				{
					this._InventoryNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(1000)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(1000)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trim", DbType="NVarChar(1000)")]
		public string Trim
		{
			get
			{
				return this._Trim;
			}
			set
			{
				if ((this._Trim != value))
				{
					this._Trim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="NVarChar(1000)")]
		public string Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this._Mileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class GetVehicleDetailByUserIDResult
	{
		
		private string _Category;
		
		private string _SubCategory;
		
		private string _Make;
		
		private string _Model;
		
		private string _Year;
		
		private string _Color;
		
		private string _Trim;
		
		private string _StartingMileage;
		
		private string _LastRecordedMileage;
		
		private string _Title;
		
		private string _InPosession;
		
		public GetVehicleDetailByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(1000)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(1000)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trim", DbType="NVarChar(1000)")]
		public string Trim
		{
			get
			{
				return this._Trim;
			}
			set
			{
				if ((this._Trim != value))
				{
					this._Trim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingMileage", DbType="NVarChar(1000)")]
		public string StartingMileage
		{
			get
			{
				return this._StartingMileage;
			}
			set
			{
				if ((this._StartingMileage != value))
				{
					this._StartingMileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRecordedMileage", DbType="NVarChar(1000)")]
		public string LastRecordedMileage
		{
			get
			{
				return this._LastRecordedMileage;
			}
			set
			{
				if ((this._LastRecordedMileage != value))
				{
					this._LastRecordedMileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPosession", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string InPosession
		{
			get
			{
				return this._InPosession;
			}
			set
			{
				if ((this._InPosession != value))
				{
					this._InPosession = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
